AWSTemplateFormatVersion: '2010-09-09'
Description:  Template for Cognito Federated User Pool.

Parameters:
  Environment:
    Type: String
    Description: Environment Name
    Default: dev
    AllowedValues:
      - "prod"
      - "develop" 
      - "dev"  
      - "qa"            
  CognitoUserPoolName:
    Type: String
    Default: KoandinaUserPool
  CognitoUserPoolClientName:
    Type: String
    Default: KoandinaPoolClient
  KoandinaProviderName:
    Type: String
    Default: "AzureAD"
  KoandinaMetadataURL:
    Type: String
    Default: "https://login.microsoftonline.com/af5d7ac6-4cdf-4034-a02d-b7ac4a5757f7/federationmetadata/2007-06/federationmetadata.xml?appid=9443d62d-21de-4547-9113-2a5e0e2a0f46"  

Conditions:
  DevEnvironment: !Equals [ !Ref Environment, 'dev' ]
  QAEnvironment: !Equals [!Ref Environment, 'qa']    
  ProdEnvironment: !Equals [!Ref Environment, 'prod']

Resources:
  KoandinaUserPool:
    DeletionPolicy: Retain  
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName:
        Ref: CognitoUserPoolName
      Policies:
        PasswordPolicy:
          MinimumLength: 8
      UsernameAttributes:
        - email
      Schema:
        - AttributeDataType: String
          Name: email   
          Mutable: true 
  
  UserAzurePoolIdentityProvider:
    Type: AWS::Cognito::UserPoolIdentityProvider
    Properties:
      UserPoolId: !Ref KoandinaUserPool
      ProviderName: !Ref KoandinaProviderName
      ProviderType: SAML
      ProviderDetails:
        MetadataURL: !Ref KoandinaMetadataURL
        IDPSignout: true
      AttributeMapping:
        email: http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress
        name: "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name"   
        family_name: "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/surname"             
        given_name: "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname"

  KoandinaUserPoolClient:
    DependsOn: UserAzurePoolIdentityProvider
    Type: AWS::Cognito::UserPoolClient
    Properties:
      AllowedOAuthFlows:
        - code
      AllowedOAuthScopes:
        - openid
        - email
      SupportedIdentityProviders: 
        - !Ref KoandinaProviderName
      CallbackURLs: 
        - !Sub https://strangeforecast-${Environment}.koandina.com/login/
        - !Sub https://strangeforecast-${Environment}.koandina.com/login
        - http://localhost:3000/login/
        - http://localhost:3000/login
      LogoutURLs: 
        - !Sub https://koandina-forecast-${Environment}.auth.us-east-1.amazoncognito.com/saml2/logout
      UserPoolId:
        Ref: KoandinaUserPool
      ClientName:
        Ref: CognitoUserPoolClientName
      GenerateSecret: false
      RefreshTokenValidity: 1
      AccessTokenValidity: 1
      IdTokenValidity: 1
      TokenValidityUnits:
        AccessToken: "days"
        IdToken: "days"
        RefreshToken: "days"

  UserPoolDomain: 
    Type: AWS::Cognito::UserPoolDomain 
    Properties:
      UserPoolId: !Ref KoandinaUserPool 
      Domain: !If
      - DevEnvironment
      - 'koandina-forecast-develop'
      - !Sub koandina-forecast-${Environment}

Outputs:
  PoolId:
    Description: "Pool Cognito"
    Value:
      Ref: KoandinaUserPool
 